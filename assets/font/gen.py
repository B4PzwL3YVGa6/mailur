#!/usr/bin/env python
import json
import pathlib

root = pathlib.Path(__file__).parent

text = (root / 'selection.json').read_text()
icons = json.loads(text)['icons']
tpl = '''\
/* Generated by "assets/font/gen.py" */
@font-face {
  font-family: 'icons';
  src: url('./icons.eot?rg4e9b');
  src:
    url('./icons.eot?rg4e9b#iefix') format('embedded-opentype'),
    url('./icons.ttf?rg4e9b') format('truetype'),
    url('./icons.woff?rg4e9b') format('woff'),
    url('./icons.svg?rg4e9b#icons') format('svg');
  font-weight: normal;
  font-style: normal;
}

.--icon(@symbol) {
  &::before {
    content: @symbol;
    font-family: 'icons', sans-serif;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    speak: none;
    text-transform: none;
    display: inline-block;
    width: 1.4em;
    text-align: center;

    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
}

.--only-icon() {
  box-sizing: content-box;
  min-width: 1.4em;
  overflow: hidden;

  .opt--only-icons & {
    width: 1.4em;

    &::before {
      padding-right: 2em;
    }
  }
}

%(icons)s\
'''
icon_tpl = '''\
@--symbol--%(name)s: %(symbol)s;

.--icon--%(name)s() {
  .--icon(%(symbol)s);
}

.icon--%(name)s {
  .--icon(%(symbol)s);
}
'''

css = []
for i in icons:
    name = i['properties']['name']
    code = i['properties']['code']
    symbol = '"\\%s"' % hex(code)[2:]
    css.append(icon_tpl % {'name': name, 'symbol': symbol})

f = (root / 'icons.less').resolve()
f.write_text(tpl % {'icons': '\n'.join(css)})
print('%s updated' % f)
