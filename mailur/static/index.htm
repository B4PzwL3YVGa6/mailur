<!DOCTYPE html>
<html>
<head>
  <title>Mailur</title>
  <script src="https://vuejs.org/js/vue.js"></script>
</head>
<body>
  <div id="app">
    <input v-model.lazy.trim="query" @keyup.enter="get()">
    <input type="checkbox" id="show_bodies" v-model="show_bodies">
    <label for="show_bodies">bodies</label>
    <input type="checkbox" id="show_threads" v-model="show_threads">
    <label for="show_threads">treads</label>
    <button v-on:click="get()">go!</button>
    <div v-for="uid in uids" v-if="msgs[uid]">
      <a :href="parsed_url(uid)" target="_blank" title="Parsed message" >{{ uid }}</a>
      <a :href="origin_url(uid)" target="_blank" title="Origin message">[orig]</a>
      <i>{{ flags[uid] }}</i>
      <b v-on:click.stop="search_header('x-subject', msgs[uid].subject)">
        {{ msgs[uid].subject }}
      </b>
      <div style="border-bottom: 1px solid #ccc">
        <span>{{ msgs[uid].date }}</span>
        <span v-on:click.stop="search_header('message-id ', msgs[uid].message_id)">
            {{ msgs[uid].message_id }}
        </span>
      </div>
      <div v-if="show_bodies" v-html="msgs[uid].body"></div>
    </div>
  </div>

  <script>
  var app = new Vue({
    el: '#app',
    data: {
      uids: [],
      msgs: {},
      flags: {},
      query: decodeURIComponent(location.hash.slice(1))  || 'all',
      show_threads: false,
      show_bodies: false,
    },
    methods: {
      base_url: function(params) {
        var url = app.show_threads && '/threads?q=' || '/emails?q=';
        return params && url + encodeURIComponent(app.query) || url;

      },
      get: function(query) {
        if (query) {
            app.query = query;
        }
        window.location.hash = app.query;
        fetch(app.base_url(app.query)).then(function(response) {
          return response.json();
        }).then(function(res) {
          app.uids = res.uids;
          app.msgs = res.msgs;
          app.flags = res.flags;
        });
      },
      origin_url: function(uid) {
        return '/origin/' + this.msgs[uid].uid;
      },
      parsed_url: function(uid) {
        return '/parsed/' + uid
      },
      search: function(query) {
        query = app.show_threads && query || 'inthread refs ' + query
        return app.get(query)
      },
      search_header: function(name, value) {
        return app.search('header ' + name + ' "' + value + '"');
      },
    }
  });
  var ws = new WebSocket('ws://' + location.host + '/ws');
  ws.onopen = function(event) {
    ws.send('ping');
  }
  ws.onmessage = function(event) {
    console.log('ws:' + event.data);
  }
  ws.onclose = function(event) {
    console.log('ws:closed')
  }
  </script>
</body>
</html>
